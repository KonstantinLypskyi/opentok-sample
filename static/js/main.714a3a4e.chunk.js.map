{"version":3,"sources":["MeetingRoom.js","HomePage.js","index.js"],"names":["App","state","publisher","streamId","isActive","handleError","error","alert","message","initializeSession","props","apiKey","sessionId","token","session","OT","initSession","initPublisher","insertMode","width","height","connect","console","log","publish","on","event","stream","videoType","setState","id","subscribe","handleStartShare","checkScreenSharingCapability","response","supported","extensionRegistered","extensionInstalled","videoSource","handleStopShare","unpublish","getOriginalSubscriberClassName","getOriginalScreenClassName","this","className","onClick","Component","HomePage","useState","meetingData","setMeetingData","isLoading","setLoading","handleStartMeeting","a","fetch","SERVER_BASE_URL","json","data","MeetingRoom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.714a3a4e.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { Component } from 'react';\nimport OT from '@opentok/client';\n\nclass App extends Component {\n    state = {\n        publisher: null,\n        streamId: null,\n        isActive: false,\n    };\n\n    componentDidMount() {\n        this.initializeSession();\n    }\n\n    handleError = (error) => {\n        if (error) {\n            alert(error.message);\n        }\n    };\n\n    initializeSession = () => {\n        const { apiKey, sessionId, token } = this.props;\n\n        this.session = OT.initSession(apiKey, sessionId);\n\n        // Subscribe to a newly created stream\n\n        // Create a publisher\n        const publisher = OT.initPublisher(\n            'original-publisher',\n            {\n                insertMode: 'append',\n                width: '100%',\n                height: '100%',\n            },\n            this.handleError\n        );\n\n        this.session.connect(token, (error) => {\n            // If the connection is successful, publish to the session\n            if (error) {\n                this.handleError(error);\n            } else {\n                console.log(this);\n                this.session.publish(publisher, this.handleError);\n            }\n        });\n\n        this.session.on('streamCreated', (event) => {\n            if (event.stream.videoType === 'screen') {\n                this.setState({ isActive: true, streamId: event.stream.id });\n\n                this.session.subscribe(\n                    event.stream,\n                    'original-screen',\n                    {\n                        insertMode: 'append',\n                        width: '100%',\n                        height: '100%',\n                    },\n                    this.handleError\n                );\n            } else {\n                this.session.subscribe(\n                    event.stream,\n                    'original-subscriber',\n                    {\n                        insertMode: 'append',\n                        width: '100%',\n                        height: '100%',\n                    },\n                    this.handleError\n                );\n            }\n        });\n\n        this.session.on('streamDestroyed', (event) => {\n            if (event.stream.id === this.state.streamId) {\n                this.setState({ publisher: null, streamId: null, isActive: false });\n            }\n        });\n    };\n\n    handleStartShare = () =>\n        OT.checkScreenSharingCapability((response) => {\n            if (!response.supported || response.extensionRegistered === false) {\n                // This browser does not support screen sharing.\n            } else if (response.extensionInstalled === false) {\n                // Prompt to install the extension.\n            } else {\n                // Screen sharing is available. Publish the screen.\n                const publisher = OT.initPublisher(\n                    'original-screen',\n                    {\n                        videoSource: 'screen',\n                        insertMode: 'append',\n                        width: '100%',\n                        height: '100%',\n                    },\n                    (error) => {\n                        if (error) {\n                            // Look at error.message to see what went wrong.\n                        } else {\n                            this.session.publish(publisher, (error) => {\n                                if (error) {\n                                    // Look error.message to see what went wrong.\n                                }\n                            });\n                        }\n                    }\n                );\n\n                publisher.on('streamDestroyed', (event) => {\n                    if (event.stream.id === this.state.streamId) {\n                        this.setState({ publisher: null, streamId: null, isActive: false });\n                    }\n                });\n\n                publisher.on('streamCreated', (event) => {\n                    this.setState({\n                        publisher,\n                        streamId: event.stream.id,\n                        isActive: true,\n                    });\n                });\n            }\n        });\n\n    handleStopShare = () => {\n        this.session.unpublish(this.state.publisher);\n        this.setState({ isActive: false, publisher: null });\n    };\n\n    getOriginalSubscriberClassName = () => {\n        if (this.state.isActive) {\n            return 'original-subscriber';\n        }\n\n        return 'original-subscriber--active';\n    };\n\n    getOriginalScreenClassName = () => {\n        if (this.state.isActive) {\n            return 'original-screen--active';\n        }\n\n        return 'original-screen';\n    };\n\n    session = null;\n\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"wrapper\">\n                    <div className=\"original-publisher\" id=\"original-publisher\"></div>\n                    <div className={this.getOriginalSubscriberClassName()} id=\"original-subscriber\"></div>\n                    <div className={this.getOriginalScreenClassName()} id=\"original-screen\"></div>\n                </div>\n                {!this.state.isActive && (\n                    <button onClick={this.handleStartShare} className=\"share-button\">\n                        Start share\n                    </button>\n                )}\n                {this.state.publisher && (\n                    <button onClick={this.handleStopShare} className=\"share-button\">\n                        Stop share\n                    </button>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, { useState } from 'react';\n\nimport MeetingRoom from './MeetingRoom';\n\nconst HomePage = () => {\n    const [meetingData, setMeetingData] = useState(null);\n    const [isLoading, setLoading] = useState(false);\n\n    const handleStartMeeting = async () => {\n        const SERVER_BASE_URL = 'https://opentok-sample12.herokuapp.com/';\n\n        setLoading(true);\n\n        const response = await fetch(SERVER_BASE_URL + '/session');\n        const data = await response.json();\n\n        setMeetingData(data);\n    }\n\n    if (meetingData) return <MeetingRoom { ...meetingData } />\n\n    if (isLoading) return <div>Loading ...</div>\n\n    return (\n    <button onClick={handleStartMeeting}>Start a meeting</button>\n)};\n\nexport default HomePage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomePage from './HomePage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HomePage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}